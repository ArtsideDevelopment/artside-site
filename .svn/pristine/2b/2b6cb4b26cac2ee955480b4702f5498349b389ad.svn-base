<?php
/*   
* libs/xajax/xajax_func/blog_func_xajax.php 
* Functions for working with blog    
* Функции для работы с блогом   
* @author ArtSide   
* @copyright © 2016 ArtSide   
*/
/* 
* Функция добавления нового поста 
* Function to add a new post 
* @param array $Id 
* @return xajaxResponse 
*/ 
function Add_New_Post($Id)
{
  $objResponse = new xajaxResponse();
  // подключаем необходимые библиотеки  
  require_once(AS_ROOT .'libs/security.php');
  require_once(AS_ROOT .'libs/query_set.php');
  require_once(AS_ROOT .'libs/query_variables/query_post.php');
  // Подключаем проверку заполнения полей
  include_once AS_ROOT .'libs/check/check_post.php';   
  if($errors==0){
      //инициализация переменных
      $url_path="";
      // проверяем все входящие переменные на наличие xss и sql инъекции
      $alias=str_replace(" ", "-", strtolower(trim(trim(check_form($Id['alias'])),"/")));
      $add_date=  date("Y-m-d H:i:s");
      /*
      * находим максимальное занчение hierarchy, записанное в bd, 
      * для определения текущего значения hierarchy для добавляемой страницы       
      */      
      try{
          
          // находим url адрес родителя для построения текущего url адреса страницы   
          /*
          if($parent_id*1>0){
              $res_parent = DB::mysqliQuery(AS_DATABASE,"
                  SELECT 
                      `url_path` 
                  FROM
                      `". AS_DBPREFIX ."content` 
                  WHERE  
                      `id`=".$parent_id."
                  "); 
              if($res_parent->num_rows>0){
                   $row_parent = $res_parent->fetch_array();
                   $url_path=trim($row_parent[0], "/"); // удаляем лишние / чтобы сформировать необходимый url
              }
          }
           */
          // формируем url адрес текущей страницы
          //$url_path=trim($url_path."/".$alias_page, "/"); // удаляем лишние / он появляется если parent_id = 0   
          $url_path ="blog/post/".$alias;
          /*
          * Добавляем информацию о новой странице в базу данных
          * insert page data in to db      
          */ 
          $res = DB::mysqliQuery(AS_DATABASE,"
              INSERT INTO
                  `". AS_DBPREFIX ."blog`
              SET 
                  ".m_query($new_post_str, $Id).",                  
                  `url_path`='".$url_path."', 
                  `alias`='".$alias."',
                  `add_date`='".$add_date."'    
              ");
      }
      catch (ExceptionDataBase $edb){
          throw new ExceptionDataBase("Ошибка в запросе к базе данных",2, $edb);
      }
      $dialog_msg ="
        <div id='modal_dialog_notice'>
          <h2>Пост успешно добавлена!</h2>
          <p>Далее Вы можете <a href='/admin/add-page'>Добавить еще одну страницу</a>, 
                    или перейти на <a href='/admin/pages'>страницы сайта</a></p>
        </div>";
      $objResponse->assign("modal_content_replace","innerHTML",  $dialog_msg);
      $objResponse->call("modal_dialog_show");
  } 
  else{
      $all_error="Проверьте правильность заполнения полей, отмеченных *. ";
  }
  //generateSiteMap();
  $objResponse->assign("all_error","innerHTML", $all_error);
  return $objResponse;
}